apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "<%= codeAppName %>.fullname" . }}
  labels:
    {{- include "<%= codeAppName %>.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "<%= codeAppName %>.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "<%= codeAppName %>.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "<%= codeAppName %>.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: APPLICATION
            value: "<%= codeAppName %>"
      {{- if .Values.env }}
        {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.secretEnv.keys }}
        {{- range .Values.secretEnv.keys }}
          - name: {{ . }}
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.secretEnv.name }}
                key: {{ . }}
        {{- end }}
      {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.podContainerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
          {{- if .Values.secretmount }}
            - name: secrets
              mountPath: "/app/secrets"
              readOnly: true
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "<%= codeAppName %>.fullname" . }}
      {{- if .Values.secretmount }}
        - name: secrets
          secret:
            secretName: {{ .Values.secretmount }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
